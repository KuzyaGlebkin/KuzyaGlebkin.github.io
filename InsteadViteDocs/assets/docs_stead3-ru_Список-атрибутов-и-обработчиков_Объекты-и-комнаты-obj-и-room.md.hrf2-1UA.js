import{_ as l,c as o,o as e,ag as t}from"./chunks/framework.BDwTZuFy.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/stead3-ru/Список-атрибутов-и-обработчиков/Объекты-и-комнаты-obj-и-room.md","filePath":"docs/stead3-ru/Список-атрибутов-и-обработчиков/Объекты-и-комнаты-obj-и-room.md"}'),a={name:"docs/stead3-ru/Список-атрибутов-и-обработчиков/Объекты-и-комнаты-obj-и-room.md"};function _(r,i,s,n,d,c){return e(),o("div",null,i[0]||(i[0]=[t('<h3 id="объекты-и-комнаты-obj-и-room" tabindex="-1">Объекты и комнаты (obj и room) <a class="header-anchor" href="#объекты-и-комнаты-obj-и-room" aria-label="Permalink to &quot;Объекты и комнаты (obj и room)&quot;">​</a></h3><ul><li>nam - атрибут, обязательное имя объекта;</li><li>tag - атрибут, тег объекта;</li><li>ini - обработчик, вызывается для объекта/комнаты при конструировании игрового мира, может быть только функцией;</li><li>dsc - атрибут, вызывается для вывода описания;</li><li>disp - атрибут, информация об объекте в инвентаре или комнаты в списке переходов;</li><li>title - атрибут комнаты, название комнаты выводимое при нахождении внутри этой комнаты;</li><li>decor - атрибут комнаты, вызывается для вывода описания декораций в сцене;</li><li>nolife - атрибут комнаты, не вызывать обработчики живых объектов;</li><li>noinv - атрибут комнаты, не показывать инвентарь;</li><li>obj - атрибут, список вложенных объектов;</li><li>way - атрибут комнаты, список с переходами в другие комнаты;</li><li>life - обработчик, вызывается для &quot;живых&quot; (фоновых) объектов;</li><li>act - обработчик объекта, вызывается при действии на предмет сцены;</li><li>tak - обработчик взятия предмета со сцены (если не задан act);</li><li>inv - обработчик объекта, вызывается при действии на предмет инвентаря;</li><li>use(s, на что) - обработчик объекта, вызывается при использовании предмета инвентаря на предмет сцены или инвентаря;</li><li>used(s, что) - обработчик объекта, вызывается перед use при использовании предмета (страдательная форма);</li><li>onenter(s, откуда) - обработчик комнаты, вызывается при заходе в комнату игрока, может запретить переход;</li><li>enter(s, откуда) - обработчик комнаты, вызывается после успешного входа в комнату;</li><li>onexit(s, куда) - обработчик комнаты, вызывается при выходе из комнаты, может запретить переход;</li><li>exit(s, куда) - обработчик комнаты, вызывается после успешного выхода из комнаты.</li></ul>',2)]))}const p=l(a,[["render",_]]);export{u as __pageData,p as default};
