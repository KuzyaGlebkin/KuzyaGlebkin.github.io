import{_ as l,c as e,o,ag as t}from"./chunks/framework.BDwTZuFy.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/stead3-ru/Методы-объектов/Объект-obj.md","filePath":"docs/stead3-ru/Методы-объектов/Объект-obj.md"}'),a={name:"docs/stead3-ru/Методы-объектов/Объект-obj.md"};function r(s,i,_,n,d,c){return o(),e("div",null,i[0]||(i[0]=[t('<h3 id="объект-obj" tabindex="-1">Объект (obj) <a class="header-anchor" href="#объект-obj" aria-label="Permalink to &quot;Объект (obj)&quot;">​</a></h3><ul><li>:with({...}) - задание списка obj;</li><li>:new(...) - конструктор;</li><li>:actions(тип, [значение]) - задать/прочитать число событий объекта заданного типа;</li><li>:inroom([{}]) - в какой комнате (комнатах) находится объект;</li><li>:where([{}]) - в каком объекте (объектах) находится объект;</li><li>:purge() - удалить объект из всех списков;</li><li>:remove() - удалить объект из всех объектов/комнат/инвентаря;</li><li>:close()/:open() - закрыть/открыть;</li><li>:disable()/:enable() - выключить/включить;</li><li>:closed() -- вернёт true, если закрыт;</li><li>:disabled() -- вернёт true, если выключен;</li><li>:empty() -- вернёт true, если пуст;</li><li>:save(fp, n) -- функция сохранения;</li><li>:display() -- функция отображения в сцене;</li><li>:visible() -- вернёт true если считается видимым;</li><li>:srch(w) -- поиск видимого объекта;</li><li>:lookup(w) -- поиск любого объекта;</li><li>:for_each(fn, ...) -- итератор по объектам;</li><li>:lifeon()/:lifeoff() -- добавить/удалить из списка живых;</li><li>:live() -- вернёт true, если в списке живых.</li></ul>',2)]))}const f=l(a,[["render",r]]);export{p as __pageData,f as default};
