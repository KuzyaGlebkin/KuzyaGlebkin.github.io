import{_ as i,c as a,o as l,ag as t}from"./chunks/framework.BDwTZuFy.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/stead3-ru/Атрибуты-списки.md","filePath":"docs/stead3-ru/Атрибуты-списки.md"}'),n={name:"docs/stead3-ru/Атрибуты-списки.md"};function p(h,s,e,k,d,E){return l(),a("div",null,s[0]||(s[0]=[t(`<h2 id="атрибуты-списки" tabindex="-1">Атрибуты-списки <a class="header-anchor" href="#атрибуты-списки" aria-label="Permalink to &quot;Атрибуты-списки&quot;">​</a></h2><p>Атрибуты-списки (такие как &#39;way&#39; или &#39;obj&#39;) позволяют работать со своим содержимым с помощью набора методов. Атрибуты-списки призваны сохранять в себе списки объектов. На самом деле, вы можете создавать списки для собственных нужд, и размещать их в объектах, например:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">room</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	nam </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;холодильник&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	frost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> std.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;мороженное&#39; </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Хотя, обычно, это не требуется. Ниже перечислены методы объектов типа &#39;список&#39;. Вы можете вызывать их для любых списков, хотя обычно это будут way и obj, например:</p><pre><code>ways():disable() -- отключить все переходы
</code></pre><ul><li>disable() - отключает все объекты списка;</li><li>enable() - включает все объекты списка;</li><li>close() - закрыть все объекты списка;</li><li>open() - открыть все объекты списка;</li><li>add(объект|имя, [позиция]) - добавить объект;</li><li>for_each(функция, аргументы) - вызвать для каждого объекта функцию с аргументами;</li><li>lookup(имя/тег или объект) - поиск объекта в списке. Возвращает объект и индекс;</li><li>srch(имя/тег или объект) - поиск видимого объекта в списке;</li><li>empty() - вернёт true, если список пуст;</li><li>zap() - очистить список;</li><li>replace(что, на что) - заменить объект в списке;</li><li>cat(список, [позиция]) - добавить содержимое списка в текущий список по позиции;</li><li>del(имя/объект) - удалить объект из списка.</li></ul><p>Существуют функции, возвращающие объекты-списки:</p><ul><li>inv([игрок]) - вернуть инвентарь игрока;</li><li>objs([комната]) - вернуть объекты комнаты;</li><li>ways([комната]) - вернуть переходы комнаты.</li></ul><p>Конечно, вы можете обращаться к спискам и напрямую:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	pl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;нож&#39;</span></span></code></pre></div><p>Объекты в списках хранятся в том порядке, в котором вы их добавите. Однако, если у объекта присутствует числовой атрибут pri, то он играет роль <em>приоритета</em> в списке. Если pri не задан, значением приоритета считается 0. Таким образом, если вы хотите, чтобы какой-то объект был первым в списке, давайте ему приоритет pri &lt; 0. Если в конце списка -- &gt; 0.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	pri </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	nam </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;штука&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	disp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Очень важный предмет инвентаря&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	inv </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> [[Осторожней с этим предметом.]]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,12)]))}const c=i(n,[["render",p]]);export{o as __pageData,c as default};
