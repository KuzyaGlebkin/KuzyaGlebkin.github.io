import{_ as a,c as i,o as n,ag as e}from"./chunks/framework.BDwTZuFy.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/stead3-ru/Общие-сведения/Как-создавать-игру.md","filePath":"docs/stead3-ru/Общие-сведения/Как-создавать-игру.md"}'),t={name:"docs/stead3-ru/Общие-сведения/Как-создавать-игру.md"};function p(l,s,h,r,k,d){return n(),i("div",null,s[0]||(s[0]=[e(`<h3 id="как-создавать-игру" tabindex="-1">Как создавать игру <a class="header-anchor" href="#как-создавать-игру" aria-label="Permalink to &quot;Как создавать игру&quot;">​</a></h3><p>Игра представляет из себя каталог, в котором должен находиться скрипт (текстовый файл) main3.lua. (Обратите внимание, наличие файла main3.lua означает, что вы пишите игру на STEAD3!) Другие ресурсы игры (скрипты на lua, графика и музыка) должны находиться в рамках этого каталога. Все ссылки на ресурсы делаются относительно текущего каталога -- каталога игры.</p><p>В начале файла main3.lua может быть определён заголовок, состоящий из тегов (строк специального вида). Теги должны начинаться с символов: два минуса.</p><pre><code>--
</code></pre><p>Два минуса -- это комментарий с точки зрения Lua. На данный момент существуют следующие теги.</p><p>Тег $Name: содержит название игры в кодировке UTF-8. Пример использования тега:</p><pre><code>-- $Name: Самая интересная игра!$
</code></pre><p>Затем следует (желательно) задать версию игры:</p><pre><code>-- $Version: 0.5$
</code></pre><p>И указать авторство:</p><pre><code>-- $Author: Анонимный любитель текстовых приключений$
</code></pre><p>Дополнительную информацию об игре, можно задать тегом Info:</p><pre><code>-- $Info: Это ремейк старой игры\\nС ZX specturm$
</code></pre><p>Обратите внимание на \\n в Info, это станет переводом строки, когда вы выберете пункт &quot;Информация&quot; в INSTEAD.</p><p>Если вы разрабатываете игру в Windows, то убедитесь, что ваш редактор поддерживает кодировку UTF-8 <em>без BOM</em>. Именно эту кодировку следует использовать при написании игры!</p><p>Далее, обычно следует указать модули, которые требуются игре. О модулях будет рассказано отдельно.</p><pre><code>require &quot;fmt&quot; -- некоторые функции форматирования
fmt.para = true -- включить режим параграфов (отступы)
</code></pre><p>Кроме того, обычно стоит определить обработчики по умолчанию: game.act, game.use, game.inv, о которых также будет рассказано ниже.</p><pre><code>game.act = &#39;Не работает.&#39;;
game.use = &#39;Это не поможет.&#39;;
game.inv = &#39;Зачем мне это?&#39;;
</code></pre><p><em>Инициализацию</em> игры следует описывать в функции init, которая вызывается движком в самом начале. В этой функции удобно инициализировать состояние игрока на начало игры, или какие-то другие действия, нужные для первоначальной настройки мира игры. Впрочем, функция &#39;&#39;init&#39;&#39; может быть и не нужна.</p><pre><code>function init() -- добавим в инвентарь нож и бумагу
    take &#39;нож&#39;
    take &#39;бумага&#39;
end
</code></pre><p>После того как игра проинициализирована, выполняется запуск игры. Вы можете определить функцию start(), которая запускается непосредственно перед запуском игры. Это значит, например, что в случае загрузки сохранённой игры, start() вызовется после того, как сохранение будет прочитано,</p><pre><code>function start(load) -- восстановить состояние?
	if load then
		dprint &quot;Это загрузка состояния.&quot;
	else
		dprint &quot;Это старт игры.&quot;
	end
	-- нам сейчас не нужно ничего делать
end
</code></pre><p>Графический интерпретатор ищет доступные игры в каталоге games. Unix-версия интерпретатора, кроме этого каталога, просматривает также игры в каталоге ~/.instead/games. Windows-версия: %LOCALAPPDATA%\\instead\\games (ниже Vista: Documents and Settings\\USER\\Local Settings\\Application Data\\instead\\games). В Windows- и standalone-Unix-версии игры ищутся в каталоге ./appdata/games, если он существует.</p><p>В некоторых сборках INSTEAD (в Windows, в Linux если проект собран с gtk и др.) можно открывать игру по любому пути из меню &quot;Выбор игры&quot;. Либо, нажать f4. Если в каталоге с играми присутствует только одна игра, INSTEAD запустит её автоматически, это удобно, если вы хотите распространять свою игру вместе с движком.</p><p>Таким образом, вы кладёте игру в свой каталог и запускаете INSTEAD.</p><p><strong>Важно!</strong></p><p>При написании игры, настоятельно рекомендуется использовать отступы для оформления кода игры, как это сделано в примере из данного руководства, этим самым вы сократите количество ошибок и сделаете свой код наглядней!</p><p>Ниже приводится минимальный шаблон для вашей первой игры:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- $Name: Моя первая игра$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- $Version: 0.1$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- $Author: Анонимный автор$</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;fmt&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">para</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">game.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">act</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Гм...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">game.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Не сработает.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">game.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">inv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Зачем это мне?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- инициализация, если она нужна</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,30)]))}const g=a(t,[["render",p]]);export{c as __pageData,g as default};
