import{_ as i,c as a,o as l,ag as n}from"./chunks/framework.BDwTZuFy.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/stead3-ru/Модули/Модуль-sprite/Пиксели.md","filePath":"docs/stead3-ru/Модули/Модуль-sprite/Пиксели.md"}'),h={name:"docs/stead3-ru/Модули/Модуль-sprite/Пиксели.md"};function p(k,s,t,e,E,r){return l(),a("div",null,s[0]||(s[0]=[n(`<h4 id="пиксели" tabindex="-1">Пиксели <a class="header-anchor" href="#пиксели" aria-label="Permalink to &quot;Пиксели&quot;">​</a></h4><p>Модуль спрайтов поддерживает также работу с пиксельной графикой. Вы можете создавать объекты -- наборы пикселей, модифицировать их и рисовать в спрайты.</p><p>Создание пикселей осуществляется функцией pixels.new().</p><p>Примеры:</p><pre><code>local p1 = pixels.new(320, 200) -- создали пиксели 320x200
local p2 = pixels.new &#39;gfx/apple.png&#39; -- создали пиксели из
-- изображения
local p3 = pixels.new(320, 200, 2) -- создали пиксели 320x200,
-- которые при отрисовке их в спрайт -- будут смасштабированы до
-- 640x400
</code></pre><p>Объект пиксели имеет следующие методы:</p><blockquote><p>при описании использованы обозначения: r, g, b, a -- компоненты пикселя: красный, зелёный, синий, и прозрачность. Все значения от 0 до 255). x, y - координаты левого верхнего угла, w, h -- ширина и высота области.</p></blockquote><ul><li>:size() -- вернуть размер и масштаб (как 3 значения);</li><li>:clear(r, g, b, [a]) -- быстрая очистка пикселей;</li><li>:fill(r, g, b, [a]) -- заливка (с учётом прозрачности);</li><li>:fill(x, y, w, h, r, g, b, [a]) -- заливка области (с учётом прозрачности);</li><li>:val(x, y, r, g, b, a) - задать значение пикселя</li><li>:val(x, y) -- получить компоненты r, g, b, a</li><li>:pixel(x, y, r, g, b, a) -- нарисовать пиксель (с учётом прозрачности существующего пикселя);</li><li>:line(x1, y1, x2, y2, r, g, b, a) -- линия;</li><li>:lineAA(x1, y1, x2, y2, r, g, b, a) -- линия с AA;</li><li>:circle(x, y, radius, r, g, b, a) -- окружность;</li><li>:circleAA(x, y, radius, r, g, b, a) -- окружность с AA;</li><li>:poly({x1, y1, x2, y2, ...}, r, g, b, a) -- полигон;</li><li>:polyAA({x1, y1, x2, y2, ...}, r, g, b, a) -- полигон с AA;</li><li>:blend(x1, y1, w1, h1, pixels2, x, y) -- рисовать область пикселей в другой объект пиксели, полная форма;</li><li>:blend(pixels2, x, y) -- короткая форма;</li><li>:fill_circle(x, y, radius, r, g, b, a) -- залитый круг;</li><li>:fill_triangle(x1, y1, x2, y2, x3, y3, r, g, b, a) -- залитый треугольник;</li><li>:fill_poly({x1, y1, x2, y2, ...}, r, g, b, a) -- залитый полигон;</li><li>:copy(...) -- как blend, но не рисовать, а копировать (быстро);</li><li>:scale(xscale, yscale, [smooth]) -- масштабирование в новый объект pixels;</li><li>:rotate(angle, [smooth]) -- поворот в новый объект pixels;</li><li>:draw_spr(...) -- как draw, но в спрайт, а не пиксели;</li><li>:copy_spr(...) -- как copy, но в спрайт, а не пиксели;</li><li>:compose_spr(...) -- то же самое, но в режиме compose;</li><li>:dup() -- создать копию пикселей;</li><li>:sprite() -- создать спрайт из пикселей.</li></ul><p>Также, есть возможность работы со шрифтами:</p><ul><li>pixels.fnt(fnt(шрифт.ttf, размер) -- создать шрифт;</li></ul><p>При этом, у созданного объекта &quot;шрифт&quot; существует метод text:</p><ul><li>:text(текст, цвет(как в спрайтах), стиль) -- создать пиксели с текстом;</li></ul><p>Например:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fnt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pixels.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fnt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sans.ttf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fnt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HELLO, INSTEAD!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;black&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	pxl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">copy_spr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sprite.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	pxl2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">draw_spr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sprite.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">draw_spr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sprite.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Ещё один пример (автор примера, Андрей Лобанов):</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sprite&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;timer&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sprite.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">direct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">declare</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;pxl&#39; </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">declare</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t&#39; </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> game</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x, y, i</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">199</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">149</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">               pxl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i, i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   end</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   pxl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">copy_spr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sprite.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(load)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   pxl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pixels.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   timer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>При процедурной генерации с помощью pixels удобно использовать шумы Перлина. В INSTEAD существуют функции:</p><ul><li>instead.noise1(x) - 1D шум Перлина;</li><li>instead.noise2(x, y) - 2D шум Перлина;</li><li>instead.noise3(x, y, z) - 3D шум Перлина;</li><li>instead.noise4(x, y, z, w) - 4D шум Перлина;</li></ul><p>Все эти функции возвращают значение в диапазоне [-1; 1] а на вход получают координаты с плавающей точкой.</p>`,19)]))}const g=i(h,[["render",p]]);export{y as __pageData,g as default};
