import{_ as i,c as a,o as p,ag as n}from"./chunks/framework.BDwTZuFy.js";const r=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/stead3-ru/Графика.md","filePath":"docs/stead3-ru/Графика.md"}'),t={name:"docs/stead3-ru/Графика.md"};function h(l,s,k,e,g,d){return p(),a("div",null,s[0]||(s[0]=[n(`<h2 id="графика" tabindex="-1">Графика <a class="header-anchor" href="#графика" aria-label="Permalink to &quot;Графика&quot;">​</a></h2><p>Графический интерпретатор INSTEAD анализирует атрибут сцены &#39;pic&#39;, и воспринимает его как путь к картинке, например:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">room</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	pic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;gfx/home.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	nam </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Дома&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	dsc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Я у себя дома&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p><strong>Важно!</strong></p><p>Используйте в путях только прямые &#39;/&#39;. Также, настоятельно рекомендуется использовать в именах каталогов и файлов только латинские строчные символы. Этим самым вы обезопасите свою игру от проблем с совместимостью и она будет работать на всех архитектурных платформах, куда портирован INSTEAD.</p><p>Конечно, &#39;pic&#39; может быть функцией, расширяя возможности разработчика. Если в текущей сцене не определён атрибут &#39;pic&#39;, то берётся атрибут &#39;game.pic&#39;. Если не определён и он, то картинка не отображается.</p><p>Поддерживаются все наиболее распространённые форматы изображений, но я рекомендую вам использовать &#39;png&#39; и (когда важен размер) &#39;jpg&#39;.</p><p>Вы можете использовать в качестве картинок анимированные gif файлы.</p><p>Вы можете встраивать графические изображения прямо в текст, в том числе в инвентарь, переходы, заглавия комнат и &#39;dsc&#39; с помощью функции &#39;fmt.img&#39; (Для этого включите модуль fmt).</p><p>Например:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;fmt&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	nam </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;яблоко&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	disp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Яблоко&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fmt.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;img/apple.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Тем-не менее, картинку сцены всегда следует оформлять в виде &#39;pic&#39; атрибута, а не вставки &#39;fmt.img&#39; в &#39;dsc&#39; комнаты.</p><p>Дело в том, что картинка сцены масштабируется по другому алгоритму. Картинки &#39;fmt.img&#39; масштабируются в соответствии с настройками INSTEAD (масштаб темы), а &#39;pic&#39; -- учитывает также размер картинки.</p><p>Кроме того, картинки &#39;pic&#39; обладают и другими свойствами, например, возможностью отслеживания координат кликов мышью.</p><p>Если вы поместите &#39;fmt.img&#39; внутрь { и }, то получите графическую ссылку.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	nam </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;яблоко&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	disp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;яблоко &#39; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;img/apple.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	dsc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">		p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;На полу лежит {яблоко&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,fmt.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">img</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;img/apple.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		-- другие варианты:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		-- return &quot;На полу лежит {яблоко&quot;..fmt.img(&#39;img/apple.png&#39;)..&quot;}&quot;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		-- p &quot;На полу лежит {яблоко&quot;..fmt.img(&#39;img/apple.png&#39;)..&quot;}&quot;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		-- или dsc = &quot;На полу лежит {яблоко&quot;..fmt.img(&#39;img/apple.png&#39;)..&quot;}&quot;;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>INSTEAD поддерживает обтекание картинок текстом. Если картинка вставляется с помощью функции &#39;fmt.imgl&#39;/&#39;fmt.imgr&#39;, она будет расположена у левого/правого края.</p><p><strong>Важно!</strong></p><blockquote><p>Картинки, вставленные в текст с помощью &#39;fmt.imgl/fmt.imgr&#39; не могут быть ссылками!!! Используйте их только в декоративных целях.</p></blockquote><p>Для задания отступов вокруг изображения используйте &#39;pad&#39;, например:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fmt.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">imgl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;pad:16,picture.png&#39; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- отступы по 16 от каждого края</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fmt.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">imgl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;pad:0 16 16 4,picture.png&#39; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- отступы: вверху 0, справа 16, внизу 16, слева 4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fmt.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">imgl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;pad:0 16,picture.png&#39; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- отступы: вверху 0, справа 16, внизу 0, слева 16</span></span></code></pre></div><p>Вы можете использовать псевдо-файлы для изображений прямоугольников и пустых областей:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dsc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fmt.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">img</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;blank:32x32&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[[Строка с пустым изображением.]]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dsc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fmt.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">img</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;box:32x32,red,128&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[[Строка красным полупрозрачным квадратом.]]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>INSTEAD может обрабатывать составные картинки, например:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;gfx/mycat.png;gfx/milk.png@120,25;gfx/fish.png@32,32&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Таким образом, составная картинка представляет собой набор путей к изображениям, разделённых символом &#39;;&#39;. Вторая и последующие компоненты могут содержать постфикс в виде @x_координата,y_координата%, где координате 0,0 соответствует левый верхний угол всего изображения. Общий размер картинки считается равным общему размеру первой компоненте составной картинки, то есть, первый компонент (в нашем примере -- gfx/mycat.png) играет роль холста, а последующие компоненты накладываются на этот холст.</p><p>Наложение происходит для левого верхнего угла накладываемой картинки. Если вам нужно, чтобы наложение происходило относительно центра накладываемой картинки, используйте перед координатами префикс &#39;&#39;c&#39;&#39;, например:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;gfx/galaxy.png;gfx/star.png@c128,132&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Оформив в виде функции формирование пути составной картинки, вы можете генерировать изображение на основе игрового состояния.</p><p>Если вы в своей игре привязываетесь к каким-то координатам изображений, или к их размерам, делайте это относительно оригинальных размеров изображений. При масштабировании темы под заданное игроком разрешение, INSTEAD сам будет осуществлять пересчёт координат (при этом координаты для игры выглядят так, как будто игра запущена без масштабирования). Однако, возможны небольшие погрешности вычислений.</p><p>Если вам не хватает функций, описанных в этой главе, изучите модуль &quot;sprite&quot;, который предоставляет более широкие возможности по графическому оформлению. Но я крайне не рекомендую делать это в своей первой игре.</p>`,31)]))}const c=i(t,[["render",h]]);export{r as __pageData,c as default};
