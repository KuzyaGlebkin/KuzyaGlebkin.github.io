import{_ as a,c as i,o as e,ag as t}from"./chunks/framework.BDwTZuFy.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/stead3-ru/Полезные-советы/Кодирование-исходного-кода-игры.md","filePath":"docs/stead3-ru/Полезные-советы/Кодирование-исходного-кода-игры.md"}'),n={name:"docs/stead3-ru/Полезные-советы/Кодирование-исходного-кода-игры.md"};function l(p,s,d,h,o,k){return e(),i("div",null,s[0]||(s[0]=[t(`<h3 id="кодирование-исходного-кода-игры" tabindex="-1">Кодирование исходного кода игры <a class="header-anchor" href="#кодирование-исходного-кода-игры" aria-label="Permalink to &quot;Кодирование исходного кода игры&quot;">​</a></h3><p>Если вы не хотите показывать исходный код своих игр, вы можете закодировать исходный код с помощью параметра командной строки &#39;-encode&#39;:</p><pre><code>sdl-instead -encode &lt;путь к файлу&gt; [выходной путь]
</code></pre><p>И использовать закодированный файл с помощью обычных include/gamefile. Однако, для этого вы должны написать в начале main3.lua:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">std.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dofile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> std.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">doencfile</span></span></code></pre></div><p>При этом главный файл &#39;main3.lua&#39; необходимо оставлять открытым. Таким образом, схема выглядит следующим образом (&#39;game.lua&#39; -- закодированный файл):</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- $Name: Моя закрытая игра!$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">std.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dofile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> std.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">doencfile</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;game&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- никто не узнает, как её пройти!</span></span></code></pre></div><p><strong>Важно!</strong></p><blockquote><p>Не используйте компиляцию игр с помощью &#39;luac&#39;, так как &#39;luac&#39; создаёт платформозависимый код! Однако, компиляция игр может быть использована для поиска ошибок в коде.</p></blockquote>`,9)]))}const c=a(n,[["render",l]]);export{_ as __pageData,c as default};
